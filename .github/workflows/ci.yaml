name: CI

on:
  push:
  pull_request:

jobs:
  test:
    name: Test suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo test
      - run: cargo test --no-default-features
      - run: cargo test --features alloc
      - run: cargo test --features std

  # windows:
  #   name: Test suite (windows)
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dtolnay/rust-toolchain@nightly
  #     - run: cargo test --features std -- --skip ui --exact

  stable:
    name: Rust ${{matrix.rust}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - run: cargo build
      - run: cargo build --no-default-features
      - run: cargo build --features std
      - run: cargo test

  # clippy:
  #   name: Clippy
  #   runs-on: ubuntu-latest
  #   # if: github.event_name != 'pull_request'
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dtolnay/rust-toolchain@clippy
  #     - run: cargo clippy -- -Dclippy::all
  #     # - run: cargo clippy --features std -- -Dclippy::all
  #     # - run: cargo clippy --no-default-features -- -Dclippy::all -Dclippy::pedantic

  # fmt:
  #   name: Rust-Format
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dtolnay/rust-toolchain@clippy
  #     - run: cargo fmt --all -- --check

  # miri:
  #   name: Miri
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dtolnay/rust-toolchain@miri
  #     # - run: cargo miri test
  #     # - run: cargo miri test --no-default-features
  #     - run: cargo miri test --features std
  #       env:
  #         MIRIFLAGS: -Zmiri-strict-provenance
  #     - run: cargo miri test --no-default-features
  #       env:
  #         MIRIFLAGS: -Zmiri-strict-provenance
